{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport const store = () => configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","version","storage","persistedReducer","store","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/React Project/Shopping-app react/Shop/client/src/redux/store.js"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\"\r\nimport cartReducer from \"./cartRedux\"\r\nimport userReducer from \"./userSlice\"\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\n\r\n  const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, userReducer)\r\n\r\nexport const store =() => configureStore ({\r\n    reducer:{\r\n        cart:cartReducer,\r\n        user:persistedReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store)"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAWE,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBC;AAHoB,CAAtB;AAMA,MAAMC,gBAAgB,GAAGX,cAAc,CAACO,aAAD,EAAgBT,WAAhB,CAAvC;AAEF,OAAO,MAAMc,KAAK,GAAE,MAAMhB,cAAc,CAAE;EACtCiB,OAAO,EAAC;IACJC,IAAI,EAACjB,WADD;IAEJkB,IAAI,EAACJ;EAFD,CAD8B;EAKtCK,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AANkB,CAAF,CAAjC;AAaP,OAAO,IAAIc,SAAS,GAAGrB,YAAY,CAACa,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}